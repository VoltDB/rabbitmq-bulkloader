/*
 * The MIT License (MIT)
 *
 * Copyright (C) 2008-2015 VoltDB Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

project.description = 'VoltDB RabbitMQ Bulk Loader CSV Test Sender'
archivesBaseName = 'voltdb-rabbitmq-csv-send'
mainClassName = "org.voltdb.bulkloader.RMQCSVSend"
applicationName = "rabbitmq-csv-send"

repositories {
    mavenCentral()
    jcenter()
}

jar {
    manifest {
        attributes 'Implementation-Title': 'voltdb-rabbitmq-csv-send',
                   'Implementation-Version': version,
                   "Main-Class": "org.voltdb.bulkloader.RMQCSVSend"
    }
}

dependencies {
    compile 'commons-cli:commons-cli:1.2'
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.12'
    compile 'commons-logging:commons-logging:1.1.1'
    compile 'com.rabbitmq:amqp-client:3.5.1'
    compile project(':rabbitmq-utility')
}

tasks.withType(Tar) {
    compression = Compression.GZIP
}

distZip {
    archiveName applicationName + '-' + version + '.zip'
}

startScripts {
    outputDir = new File(project.buildDir, 'scripts')
    classpath = jar.outputs.files + project.configurations.runtime
    defaultJvmOpts = [
        '-Xmx2G',
        '-server',
        '-Djava.awt.headless=true',
        '-Dsun.net.inetaddr.ttl=300',
        '-Dsun.net.inetaddr.negative.ttl=3600',
        '-XX:+HeapDumpOnOutOfMemoryError',
        '-XX:HeapDumpPath=/tmp',
        '-XX:+UseParNewGC',
        '-XX:+UseConcMarkSweepGC',
        '-XX:+CMSParallelRemarkEnabled',
        '-XX:+UseTLAB',
        '-XX:CMSInitiatingOccupancyFraction=75',
        '-XX:+UseCMSInitiatingOccupancyOnly',
        '-XX:+UseCondCardMark',
        '-Dsun.rmi.dgc.server.gcInterval=9223372036854775807',
        '-Dsun.rmi.dgc.client.gcInterval=9223372036854775807',
        '-XX:CMSWaitDuration=120000',
        '-XX:CMSMaxAbortablePrecleanTime=120000',
        '-XX:+ExplicitGCInvokesConcurrent',
        '-XX:+CMSScavengeBeforeRemark',
        '-XX:+CMSClassUnloadingEnabled',
        '-XX:PermSize=64m',
        '-Dlog4j.configuration=file:__APP_HOME__/conf/log4j.properties'
    ]
    doLast {
        unixScript.text = unixScript.text.replace('__APP_HOME__', '\$APP_HOME')
        windowsScript.text = windowsScript.text.replace('__APP_HOME__', '%~dp0..')
    }
}

// Support "run" task command line arguments via -Drun.args="ARGS ...".
// JVM options can be passed through the VOLTDB_RABBITMQ_BULKLOADER_OPTS environment variable.
run {
    if (System.getProperty("run.args") != null) {
        args System.getProperty("run.args").split()
    }
}
